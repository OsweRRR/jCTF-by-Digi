/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fakemeta>
#include <jctf>

#define TASK 6321
#define ID_CLIP (taskid - TASK)

new bool:g_iBuy[MAX_PLAYERS]
new g_iCount[MAX_PLAYERS]

new const MAXCLIP[] = { -1, 13, -1, 10, 1, 7, -1, 30, 30, 1, 30, 20, 25, 30, 35, 25, 12, 20,
            10, 30, 100, 8, 30, 30, 20, 2, 7, 30, 30, -1, 50 }

// CS Offsets
#if cellbits == 32
const OFFSET_CLIPAMMO = 51
#else
const OFFSET_CLIPAMMO = 65
#endif
const OFFSET_LINUX_WEAPONS = 4

public plugin_init()
{
	register_plugin("Unlimited Clip", "1.0", "MeRcyLeZZ")
	shop_add_item("MENU_SPITEMS_OP_3", 100, "BuyInfinite")
	register_message(get_user_msgid("CurWeapon"), "message_CurWeapon")
	register_dictionary("jctf.txt")
}

public BuyInfinite(id)
{
	if(g_iBuy[id])
	{
		client_print_color(id, print_team_default, "^1[^4CTF^1] %L.", id, "PRINT_ITEM_USE")
		return PLUGIN_HANDLED
	}
	
	g_iBuy[id] = true
	client_print_color(id, print_team_default, "^1[^4CTF^1] %L.", id, "PRINT_ITEM_BULLETS_BUY")
	
	if(task_exists(id+TASK))
		remove_task(id+TASK)
	
	g_iCount[id] = 120
	set_task(1.0, "CountDown", id+TASK, .flags="b", .repeat=g_iCount[id])
	
	return PLUGIN_CONTINUE
}

public CountDown(taskid)
{
	new id = ID_CLIP
	
	client_print(id, print_center, "%L", id, "PRINT_B_ITEM", g_iCount[id] / 60, g_iCount[id] % 60)
	
	if(!g_iCount[id])
	{
		remove_task(id+TASK)
		g_iBuy[id] = false
		client_print_color(id, print_team_default, "^1[^4CTF^1] %L.", id, "PRINT_ITEM_BULLETS_END")
	}
	g_iCount[id]--
}

public client_disconnected(id)
{
	if(task_exists(id+TASK))
		remove_task(id+TASK)
	
	g_iBuy[id] = false
}

public client_putinserver(id)
	g_iBuy[id] = false

public message_CurWeapon(msg_id, msg_dest, msg_entity)
{
	if(!g_iBuy[msg_entity])
		return
	
	if(!is_user_alive(msg_entity) || get_msg_arg_int(1) != 1)
		return;
	
	static weapon, clip
	weapon = get_msg_arg_int(2)
	clip = get_msg_arg_int(3)
	
	if(MAXCLIP[weapon] > 2)
	{
		set_msg_arg_int(3, get_msg_argtype(3), MAXCLIP[weapon])
		
		if(clip < 2)
		{
			static wname[32], weapon_ent
			get_weaponname(weapon, wname, sizeof wname - 1)
			weapon_ent = fm_find_ent_by_owner(-1, wname, msg_entity)
			
			fm_set_weapon_ammo(weapon_ent, MAXCLIP[weapon])
		}
	}
}

stock fm_find_ent_by_owner(entity, const classname[], owner)
{
	while ((entity = engfunc(EngFunc_FindEntityByString, entity, "classname", classname)) && pev(entity, pev_owner) != owner) {}
	
	return entity;
}

stock fm_set_weapon_ammo(entity, amount)
{
	set_pdata_int(entity, OFFSET_CLIPAMMO, amount, OFFSET_LINUX_WEAPONS);
} 
